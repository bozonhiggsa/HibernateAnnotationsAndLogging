# после диеза и до конца строки - комментарии
# Данный файл конфигурации записывается в виде ключ = значение
# log4j.rootLogger – корневой логгер, значением этого ключа
# необходимо указать приоритет (уровень) логирования.
# В данном случае EXT - это некоторое имя аппендера, оно действует только в этом файле,
# в коде программы имена аппендеров могут быть абсолютно другими
# Можно использовать несколько имен аппендеров через запятую

log4j.rootLogger=DEBUG, EXT

# Далее каждому имени аппендера (EXT) ставим в соответствие некоторый конкретный Appender
# Возможные варианты:

# org.apache.log4j.ConsoleAppender
# Для данного типа аппендера можно задать также Target:
# log4j.appender.имя_аппендера.Target – собственно, куда выводить информацию,
# например это может быть стандартный System.out или System.err
# Это стандартный подход, если в классе ConsoleAppender есть поле target и публичный сеттер setTarget,
# то в файле конфигурации к нему можно обратиться как к .Target

# org.apache.log4j.FileAppender 
# org.apache.log4j.DailyRollingFileAppender 
# org.apache.log4j.RollingFileAppender 
# org.apache.log4j.com.SMTPAppender
# org.apache.log4j.AsyncAppender 
# org.apache.log4j.nt.NTEventLogAppender 
# org.apache.log4j.com.SyslogAppender
# org.apache.log4j.jdbc.JDBCAppender 
# org.apache.log4j.lf5.LF5Appender 
# org.apache.log4j.com.SocketAppender
# org.apache.log4j.com.SocketHubAppender
# org.apache.log4j.com.TelnetAppender
# org.apache.log4j.com.JMSAppender - посылает JMS сообщения
# org.apache.log4j.varia.ExternallyRolledFileAppender

log4j.appender.EXT=org.apache.log4j.ConsoleAppender
# можно было бы здесь для конкретного аппендера переопределить уровень логируемой информации:
# log4j.appender.EXT.threshold=INFO
# У ConsoleAppender есть абстрактный предок AppenderSkeleton, у которого есть поле threshold
# и публичный сеттер .setThreshold

# Далее необходимо задать шаблон форматирования строки журнала

log4j.appender.EXT.layout=org.apache.log4j.PatternLayout

# Далее можно задать конкретный String pattern, который будет передаваться
# в качестве аргумента PatternLayout (если конечно использован шаблон с аргументом)
# При этом можно использовать специальные символы

log4j.appender.EXT.layout.ConversionPattern = Millisecond from start: %r %nClassName: %c %nInfo: %m %n

# У класса PatternLayout есть публичный сеттер .setConversionPattern, в котором инициализируется поле pattern